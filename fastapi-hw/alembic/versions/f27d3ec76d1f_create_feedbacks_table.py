"""create feedbacks table

Revision ID: f27d3ec76d1f
Revises: 
Create Date: 2025-06-12 09:39:06.401806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f27d3ec76d1f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedback_category'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_created_at'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_description'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_title'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_updated_at'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_table('employees')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('employees_pkey')),
    sa.UniqueConstraint('email', name=op.f('employees_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('feedback',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('upvotes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('downvotes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('feedback_pkey'))
    )
    op.create_index(op.f('ix_feedback_updated_at'), 'feedback', ['updated_at'], unique=False)
    op.create_index(op.f('ix_feedback_title'), 'feedback', ['title'], unique=False)
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    op.create_index(op.f('ix_feedback_description'), 'feedback', ['description'], unique=False)
    op.create_index(op.f('ix_feedback_created_at'), 'feedback', ['created_at'], unique=False)
    op.create_index(op.f('ix_feedback_category'), 'feedback', ['category'], unique=False)
    # ### end Alembic commands ###
